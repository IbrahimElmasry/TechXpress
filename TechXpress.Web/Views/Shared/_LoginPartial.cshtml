@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a id="manage" class="nav-link text-white" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">
                Hello, @UserManager.GetUserName(User)
            </a>
            <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout"
                  asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button id="logout" type="submit" class="nav-link btn btn-link text-white border-0">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-white" id="register" asp-area="Identity" asp-page="/Account/Register">
                <i class="fa fa-user-plus"></i> Register
            </a>
            <span class="separator">&#8226;</span>
            <a class="nav-link text-white" id="login" asp-area="Identity" asp-page="/Account/Login">
                <i class="fa fa-sign-in"></i> Login
            </a>
        </li>
    }
</ul>
